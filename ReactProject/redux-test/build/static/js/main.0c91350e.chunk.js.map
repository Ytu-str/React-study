{"version":3,"sources":["reduxs/constant.js","reduxs/reducers/person.js","reduxs/reducers/index.js","reduxs/reducers/count.js","reduxs/store.js","reduxs/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","reduxs/actions/perosn.js","App.jsx","index.js"],"names":["ADD_PERSON","initState","id","name","age","combineReducers","count","preState","action","type","data","persons","perState","createStore","allReducer","composeWithDevTools","applyMiddleware","thunk","increment","Count","value","selectNumber","props","decrement","incrementIfOdd","incrementAsync","console","log","this","personNum","ref","c","onClick","Component","connect","state","length","time","setTimeout","store","dispatch","Person","addPerson","nameNode","ageNode","personObj","nanoid","addPserson","placeholder","pseronArr","map","p","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c91350e.chunk.js","sourcesContent":["/**\r\n * 该模块是定义action对象中type类型的常量池\r\n */\r\n\r\nexport const INCREMENT ='increment'\r\nexport const DECREMENT ='decrement'\r\nexport const ADD_PERSON = 'add_person'","import {ADD_PERSON} from '../constant'\r\n\r\nconst initState = [{id:'001',name:'tom',age:18}]\r\nexport default function perosnReducer(perState=initState,action){\r\n    const {type,data} = action\r\n    switch (type) {\r\n        case ADD_PERSON:\r\n           return [data,...perState]\r\n        default:\r\n            return perState\r\n    }\r\n}","//该文件汇总所有reudcer\r\nimport {combineReducers} from 'redux'\r\n//引入为count组件服务的reducer\r\nimport countReducer from './count'\r\nimport personReducer from './person'\r\n\r\n\r\nexport default  combineReducers({\r\n    count:countReducer,\r\n    persons:personReducer\r\n})\r\n","/**\r\n * 创建一个为count组件服务的reducer，本质是一个函数\r\n * preState之前的状态\r\n * action动作对象\r\n */\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\n\r\nconst initState = 0\r\nexport default function countReducer(preState=initState,action){\r\n    const {type,data} = action\r\n    switch (type) {\r\n        case 'INCREMENT':\r\n            return preState + data\r\n        case 'DECREMENT':\r\n            return preState - data\r\n        default:\r\n            return preState\r\n    }\r\n}","/**\r\n * 该文件专门用于暴露一个store对象，整个应用只有一个\r\n */\r\n\r\nimport {createStore,applyMiddleware} from 'redux'\r\n//引入汇总之后 的reducer\r\nimport allReducer from './reducers/index'\r\n\r\n//引入redux-thunk，支持异步action\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\n\r\nexport default createStore(allReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n","/**\r\n * 专门为count组件生成action对象\r\n */\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\nimport store from '../store'\r\n\r\n\r\n\r\nexport const increment = data =>({type:'INCREMENT',data})\r\nexport const decrement = (data) =>{\r\n    return {type:'DECREMENT',data}\r\n}\r\n//异步action，指action的值为函数,异步action一般都会调用同步action\r\nexport const incrementAsync = (data,time) =>{\r\n    return ()=>{\r\n        setTimeout(()=>{\r\n            store.dispatch(increment(data))\r\n        },time)\r\n    }\r\n}","//引入Count的UI组件\r\nimport React, { Component } from 'react';\r\n//引入connect用于链接UI组件和redux\r\nimport {connect} from 'react-redux'\r\nimport {increment,\r\n        decrement,\r\n        incrementAsync} \r\nfrom '../../reduxs/actions/count'\r\n\r\n//定义UI组件\r\nclass Count extends Component {\r\n\r\n\r\n    increment = () =>{\r\n        const {value} = this.selectNumber\r\n        this.props.increment(value*1)\r\n    }\r\n    decrement = () =>{\r\n        const {value} = this.selectNumber\r\n        this.props.decrement(value*1)\r\n    }\r\n    incrementIfOdd = () =>{\r\n        const {value} = this.selectNumber\r\n        if(this.props.count % 2 !==0){\r\n            this.props.increment(value*1)\r\n        }\r\n    }\r\n    incrementAsync = () =>{\r\n        const {value} = this.selectNumber\r\n        this.props.incrementAsync(value*1,500)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <h1>当前求和为:{this.props.count}</h1>\r\n                <h1>人数:{this.props.personNum}</h1>\r\n                <select ref={c=>this.selectNumber=c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>\r\n                <button onClick={this.increment}>+</button>\r\n                <button onClick={this.decrement}>—</button>\r\n                <button onClick={this.incrementIfOdd}>当前求和为基数再加</button>\r\n                <button onClick={this.incrementAsync}>异步</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//使用connect()()创建一个Count的容器组件\r\nexport default connect(\r\n    state =>({\r\n        count:state.count,\r\n        personNum:state.persons.length\r\n    }), //方法一，接收state参数，返回{count:state}对象\r\n    {\r\n        increment,\r\n        decrement,\r\n        incrementAsync \r\n    }\r\n)(Count)\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport {addPserson} from '../../reduxs/actions/perosn'\r\n\r\nclass Person extends Component {\r\n\r\n    addPerson = ()=>{\r\n        const name = this.nameNode.value\r\n        const age = this.ageNode.value*1\r\n        const personObj = {id:nanoid(),name,age}\r\n        this.props.addPserson(personObj)\r\n        this.nameNode.value = ''\r\n        this.ageNode.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>我是Person组件</h1>\r\n                <input ref={c=>this.nameNode=c} type=\"text\" placeholder=\"输入名字\"/>\r\n                <input ref={c=>this.ageNode=c} type=\"text\" placeholder=\"输入年龄\"/> \r\n                <button onClick={this.addPerson}>添加</button>\r\n                <h1>和:{this.props.count}</h1>\r\n                <ul>\r\n                    {\r\n                        this.props.pseronArr.map((p)=>{\r\n                            return <li key={p.id}>名字{p.name}--年龄{p.age}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state =>({\r\n        pseronArr:state.persons,\r\n        count:state.count\r\n    }),\r\n    {\r\n        addPserson\r\n    }\r\n)(Person)","import {ADD_PERSON} from '../constant'\r\n//创建增加一个人的action动作对象\r\nexport const addPserson = (personObj)=>({type:ADD_PERSON,data:personObj})","import React, { Component } from 'react';\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Count/>\r\n               <hr/>\r\n               <Person/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './reduxs/store'\r\n\r\n\r\nReactDOM.render(\r\n    // Provider,目的是让APP所有后代容器组件都能接收到store\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\ndocument.getElementById(\"root\"))\r\n"],"sourceRoot":""}
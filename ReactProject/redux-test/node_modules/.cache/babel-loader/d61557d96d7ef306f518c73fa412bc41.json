{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count'; //引入connect用于链接UI组件和redux\n\nimport { connect } from 'react-redux';\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../components/reduxs/count_action'; //mapStateToProps函数的返回值作为状态传递给了UI组件,\n//返回对象中的Key就作为传递给UI组件props的key,value作为props的value\n//mapStateToProps用于传递状态\n\nfunction mapStateToProps(state) {\n  //state为redux保存的状态\n  return {\n    count: state\n  };\n} //mapDispatchToProps函数的返回值作为状态传递给了UI组件,\n//返回对象中的Key就作为传递给UI组件props的key,value作为props的value\n//用于操作状态的方法\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    jia: number => {\n      //通知redux执行加法\n      dispatch(createIncrementAction(number));\n    },\n    jian: number => {\n      dispatch(createDecrementAction(number));\n    },\n    jiaAsync: number => {\n      dispatch(createIncrementAsyncAction(number));\n    }\n  };\n} //使用connect()()创建一个Count的容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["D:/ReactProject/redux-test/src/containers/Count/index.jsx"],"names":["CountUI","connect","createIncrementAction","createDecrementAction","createIncrementAsyncAction","mapStateToProps","state","count","mapDispatchToProps","dispatch","jia","number","jian","jiaAsync"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,qBAAR,EAA8BC,qBAA9B,EAAoDC,0BAApD,QAAqF,sCAArF,C,CAIA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAG;AAC9B,SAAO;AAACC,IAAAA,KAAK,EAACD;AAAP,GAAP;AACH,C,CACD;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AACHC,IAAAA,GAAG,EAAEC,MAAD,IAAU;AACd;AACIF,MAAAA,QAAQ,CAACP,qBAAqB,CAACS,MAAD,CAAtB,CAAR;AACH,KAJE;AAKHC,IAAAA,IAAI,EAAED,MAAD,IAAU;AACXF,MAAAA,QAAQ,CAACN,qBAAqB,CAACQ,MAAD,CAAtB,CAAR;AACH,KAPE;AAQHE,IAAAA,QAAQ,EAAEF,MAAD,IAAU;AACfF,MAAAA,QAAQ,CAACL,0BAA0B,CAACO,MAAD,CAA3B,CAAR;AACH;AAVE,GAAP;AAYH,C,CAED;;;AACA,eAAeV,OAAO,CAACI,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CR,OAA5C,CAAf","sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n\r\n//引入connect用于链接UI组件和redux\r\nimport {connect} from 'react-redux'\r\nimport {createIncrementAction,createDecrementAction,createIncrementAsyncAction} from '../../components/reduxs/count_action'\r\n\r\n\r\n\r\n//mapStateToProps函数的返回值作为状态传递给了UI组件,\r\n//返回对象中的Key就作为传递给UI组件props的key,value作为props的value\r\n//mapStateToProps用于传递状态\r\nfunction mapStateToProps(state){  //state为redux保存的状态\r\n    return {count:state}\r\n}\r\n//mapDispatchToProps函数的返回值作为状态传递给了UI组件,\r\n//返回对象中的Key就作为传递给UI组件props的key,value作为props的value\r\n//用于操作状态的方法\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        jia:(number)=>{\r\n        //通知redux执行加法\r\n            dispatch(createIncrementAction(number))\r\n        },\r\n        jian:(number)=>{\r\n            dispatch(createDecrementAction(number))\r\n        },\r\n        jiaAsync:(number)=>{\r\n            dispatch(createIncrementAsyncAction(number))\r\n        }\r\n    }\r\n}\r\n\r\n//使用connect()()创建一个Count的容器组件\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CountUI)\r\n\r\n"]},"metadata":{},"sourceType":"module"}
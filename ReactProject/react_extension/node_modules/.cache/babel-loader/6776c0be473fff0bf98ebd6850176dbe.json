{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; //  class Demo extends Component {\n//     state ={count:0}\n//     myRef =React.createRef()\n//     add = ()=>{\n//         this.setState(state=>({count:state.count+1}))\n//     }\n//     show = ()=>{\n//         alert(this.myRef.current.value)\n//     }\n//     componentDidMount(){\n//         this.timer=setInterval(()=>{\n//             this.setState(state=>({count:state.count+1}))\n//         },1000)\n//     }\n//     unmount =()=>{\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\n//     }\n//     componentWillUnmount(){\n//         clearInterval(this.timer)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input type=\"text\" ref={this.myRef}></input>\n//                 <h2>当前求和为:{this.state.count}</h2>\n//                 <button onClick={this.add}>点我+1</button>\n//                 <button onClick={this.unmount}>卸载组件</button>\n//                 <button onClick={this.show}>点击提示数据</button>\n//             </div>\n//         )\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  const [count, setCount] = React.useState(0);\n  const [name, setName] = React.useState('tom');\n  const myRef = React.useRef();\n  React.useEffect(() => {\n    let timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function add() {\n    //setCount(count+1) 第一种写法\n    setCount(count => count + 1);\n  }\n\n  function changeName() {\n    setName('jack');\n  }\n\n  function unmount() {\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u6211\\u7684\\u540D\\u5B57\\u662F:\", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u6211+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeName,\n      children: \"\\u70B9\\u6211\\u6539\\u540D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.show,\n      children: \"\\u70B9\\u51FB\\u63D0\\u793A\\u6570\\u636E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Demo, \"Kry0/IM14wfoKsvqdFAaxsSjCbY=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["D:/ReactProject/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component","ReactDOM","Demo","count","setCount","useState","name","setName","myRef","useRef","useEffect","timer","setInterval","clearInterval","add","changeName","unmount","unmountComponentAtNode","document","getElementById","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAsB,WAAtB,C,CAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAgBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAAtB;AAEA,QAAMG,KAAK,GAAGT,KAAK,CAACU,MAAN,EAAd;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAI;AAChB,QAAIC,KAAK,GAAGC,WAAW,CAAC,MAAI;AACxBR,MAAAA,QAAQ,CAACD,KAAK,IAAEA,KAAK,GAAC,CAAd,CAAR;AACH,KAFsB,EAErB,IAFqB,CAAvB;AAGA,WAAO,MAAI;AACPU,MAAAA,aAAa,CAACF,KAAD,CAAb;AACH,KAFD;AAGH,GAPD,EAOE,EAPF;;AASA,WAASG,GAAT,GAAc;AACV;AACAV,IAAAA,QAAQ,CAACD,KAAK,IAAEA,KAAK,GAAC,CAAd,CAAR;AACH;;AACD,WAASY,UAAT,GAAqB;AACjBR,IAAAA,OAAO,CAAC,MAAD,CAAP;AACH;;AACD,WAASS,OAAT,GAAkB;AACdf,IAAAA,QAAQ,CAACgB,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH;;AACD,sBACI;AAAA,4BACK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKX;AAA7B;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAA,oDAAWL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,oDAAWG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEQ,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,KAAKI,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArCQlB,I;;KAAAA,I;AAuCT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM  from 'react-dom'\r\n\r\n//  class Demo extends Component {\r\n//     state ={count:0}\r\n\r\n//     myRef =React.createRef()\r\n\r\n//     add = ()=>{\r\n//         this.setState(state=>({count:state.count+1}))\r\n//     }\r\n\r\n//     show = ()=>{\r\n//         alert(this.myRef.current.value)\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.timer=setInterval(()=>{\r\n//             this.setState(state=>({count:state.count+1}))\r\n//         },1000)\r\n//     }\r\n//     unmount =()=>{\r\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n//     }\r\n//     componentWillUnmount(){\r\n//         clearInterval(this.timer)\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <input type=\"text\" ref={this.myRef}></input>\r\n//                 <h2>当前求和为:{this.state.count}</h2>\r\n//                 <button onClick={this.add}>点我+1</button>\r\n//                 <button onClick={this.unmount}>卸载组件</button>\r\n//                 <button onClick={this.show}>点击提示数据</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nfunction Demo(){\r\n\r\n    const [count,setCount] =React.useState(0)\r\n    const [name,setName] =React.useState('tom')\r\n\r\n    const myRef = React.useRef()\r\n\r\n    React.useEffect(()=>{\r\n        let timer = setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n        return ()=>{\r\n            clearInterval(timer)\r\n        }\r\n    },[])\r\n\r\n    function add(){\r\n        //setCount(count+1) 第一种写法\r\n        setCount(count=>count+1)\r\n    }\r\n    function changeName(){\r\n        setName('jack')\r\n    }\r\n    function unmount(){\r\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n    }\r\n    return(\r\n        <div>\r\n             <input type=\"text\" ref={this.myRef}></input>\r\n            <h2>当前求和为:{count}</h2>\r\n            <h2>我的名字是:{name}</h2>\r\n            <button onClick={add}>点我+1</button>\r\n            <button onClick={changeName}>点我改名</button>\r\n            <button onClick={unmount}>卸载组件</button>\r\n            <button onClick={this.show}>点击提示数据</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo"]},"metadata":{},"sourceType":"module"}
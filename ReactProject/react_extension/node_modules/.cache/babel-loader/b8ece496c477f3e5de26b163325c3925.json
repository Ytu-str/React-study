{"ast":null,"code":"import _classCallCheck from\"D:/ReactProject/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/ReactProject/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/ReactProject/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/ReactProject/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Child from'./Child';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Parent=/*#__PURE__*/function(_Component){_inherits(Parent,_Component);var _super=_createSuper(Parent);function Parent(){var _this;_classCallCheck(this,Parent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={hasError:''//用于标识子组件是否存在错误\n};return _this;}_createClass(Parent,[{key:\"componentDidCatch\",value:function componentDidCatch(error,info){// 统计页面的错误。发送请求发送到后台去\nconsole.log(error,info);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6211\\u662FParent\\u7EC4\\u4EF6\"}),this.state.hasError?/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5F53\\u524D\\u7F51\\u7EDC\\u4E0D\\u7A33\\u5B9A\"}):/*#__PURE__*/_jsx(Child,{})]});}}],[{key:\"getDerivedStateFromError\",value:// 生命周期函数，一旦后台组件报错，就会触发\nfunction getDerivedStateFromError(error){console.log(error);// 在render之前触发\n// 返回新的state\nreturn{hasError:true};}}]);return Parent;}(Component);export{Parent as default};","map":{"version":3,"sources":["D:/ReactProject/react_extension/src/components/8_ErrorBoundary/Parent.jsx"],"names":["React","Component","Child","Parent","state","hasError","error","info","console","log"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,2FAEqBC,CAAAA,M,2TAEjBC,K,CAAQ,CACJC,QAAQ,CAAC,EAAG;AADR,C,mEAaR,2BAAkBC,KAAlB,CAAyBC,IAAzB,CAA+B,CAC3B;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAmBC,IAAnB,EACH,C,sBAED,iBAAS,CACL,mBACI,oCACI,sDADJ,CAEK,KAAKH,KAAL,CAAWC,QAAX,cAAsB,kEAAtB,cAAuC,KAAC,KAAD,IAF5C,GADJ,CAMH,C,0CArBD;AACA,kCAAgCC,KAAhC,CAAuC,CACnCE,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA;AACA;AACA,MAAO,CACHD,QAAQ,CAAE,IADP,CAAP,CAGH,C,oBAd+BJ,S,SAAfE,M","sourcesContent":["import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n\r\n    state = {\r\n        hasError:'' //用于标识子组件是否存在错误\r\n    }\r\n\r\n    // 生命周期函数，一旦后台组件报错，就会触发\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        // 在render之前触发\r\n        // 返回新的state\r\n        return {\r\n            hasError: true,\r\n        };\r\n    }\r\n    componentDidCatch(error, info) {\r\n        // 统计页面的错误。发送请求发送到后台去\r\n        console.log(error, info);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Parent组件</h2>\r\n                {this.state.hasError ? <h2>当前网络不稳定</h2>:<Child/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}